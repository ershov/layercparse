 --- debug2: File: data/record.c
 --- debug3: Scope: 0
data/record.c:2:8: debug3: Record: S0 (record) data/record.c:2:8: [] public Record(S0 : <RecordKind.STRUCT: 1>
  member: Variable(Token(idx=4, range=(9, 10), value='z') : [5:8] 〈int〉))
data/record.c:8:8: debug3: Record: S1 (record) data/record.c:8:8: [module2] public Record(S1 : <RecordKind.STRUCT: 1>
  member: Variable(Token(idx=4, range=(9, 10), value='x') : [5:8] 〈int〉)
  member: Variable(Token(idx=10, range=(19, 20), value='y') : [16:18] 〈S0〉))
data/record.c:14:8: debug3: Record: S2 (record) data/record.c:14:8: [module1] private Record(S2 : <RecordKind.STRUCT: 1>
  member: Variable(Token(idx=4, range=(8, 9), value='s') : [5:7] 〈S1〉))
data/record.c:19:5: function [module2] '__wti_module2_func1': debug3: Function: __wti_module2_func1 (function) data/record.c:19:5: [module2] private Function(Token(idx=35, range=(167, 186), value='__wti_module2_func1') (Token(idx=36, range=(187, 193), value='S2 *s2'))) : [163:165] 〈S1〉
data/record.c:24:5: function [module1] 'func': debug3: Function: func (function) data/record.c:24:5: [module1] public Function(Token(idx=45, range=(246, 250), value='func') (Token(idx=46, range=(251, 258), value='int num'))) : [242:245] 〈int〉
data/record.c:54:12: function [module1] '__wti_module1_func2': debug3: Function: __wti_module1_func2 (function) data/record.c:54:12: [module1] private Function(Token(idx=58, range=(907, 926), value='__wti_module1_func2') (Token(idx=59, range=(927, 931), value='void'))) : [903:905] 〈S2〉 static
data/record.c:59:12: function [module2] '__wti_module2_func2': debug3: Function: __wti_module2_func2 (function) data/record.c:59:12: [module2] private Function(Token(idx=70, range=(987, 1006), value='__wti_module2_func2') (Token(idx=71, range=(1007, 1011), value='void'))) : [983:986] 〈int〉 static
data/record.c:64:5: function [module2] '__wti_module2_func3': debug3: Function: __wti_module2_func3 (function) data/record.c:64:5: [module2] private Function(Token(idx=80, range=(1080, 1099), value='__wti_module2_func3') (Token(idx=81, range=(1100, 1104), value='void'))) : [1076:1079] 〈int〉
data/record.c:68:12: function [module1] '__wti_module1_funcX': debug3: Function: __wti_module1_funcX (function) data/record.c:68:12: [module1] public Function(Token(idx=91, range=(1159, 1178), value='__wti_module1_funcX') (Token(idx=92, range=(1179, 1183), value='void'))) : [1155:1157] 〈S2〉 static
data/record.c:72:5: function 'func_local_struct': debug3: Function: func_local_struct (function) data/record.c:72:5: [] public Function(Token(idx=99, range=(1208, 1225), value='func_local_struct') (Token(idx=100, range=(1226, 1239), value='int a, char b'))) : [1204:1207] 〈int〉
data/record.c:82:8: debug3: Record: ACCESS1 (record) data/record.c:82:8: [module1] private Record(ACCESS1 : <RecordKind.STRUCT: 1>
  member: Variable(Token(idx=4, range=(9, 10), value='x') : [5:8] 〈int〉)
  member: Variable(Token(idx=10, range=(21, 22), value='y') : [16:20] 〈char〉)
  member: Variable(Token(idx=20, range=(66, 67), value='z') : [35:42] 〈ACCESS2〉)
  nested: ACCESS2)
data/record.c:7:7: debug3: Record: ACCESS2 (record) data/record.c:7:7: [module1] private Record(ACCESS2 : <RecordKind.STRUCT: 1>
  member: Variable(Token(idx=4, range=(13, 14), value='z') : [9:12] 〈int〉)
  vardef: Variable(Token(idx=20, range=(66, 67), value='z') : [35:42] 〈ACCESS2〉))
data/record.c:7:7: info: Global variables of record 'ACCESS2' are ignored {ignored_global}
data/record.c:90:8: debug3: Record: FNPTRS (record) data/record.c:90:8: [] public Record(FNPTRS : <RecordKind.STRUCT: 1>
  member: Variable(Token(idx=4, range=(9, 14), value='f1') : [5:8] 〈int〉)
  member: Variable(Token(idx=11, range=(29, 34), value='f2') : [25:28] 〈int〉))
data/record.c:95:8: debug3: Record: unnamed_members (record) data/record.c:95:8: [] public Record(unnamed_members : <RecordKind.STRUCT: 1>
  member: Variable(Token(idx=4, range=(17, 24), value='member1') : [13:16] 〈int〉)
  member: Variable(Token(idx=10, range=(43, 50), value='member2') : [38:42] 〈char〉)
  member: Variable(Token(idx=10, range=(93, 102), value='__padding') : [88:92] 〈char〉)
  nested: (data/record.c:96:12:))
data/record.c:2:12: debug3: Record: (data/record.c:96:12:) (record) data/record.c:2:12: [] public Record((data/record.c:96:12:) : <RecordKind.UNION: 2>
  member: Variable(Token(idx=4, range=(17, 24), value='member1') : [13:16] 〈int〉)
  member: Variable(Token(idx=10, range=(43, 50), value='member2') : [38:42] 〈char〉)
  member: Variable(Token(idx=10, range=(93, 102), value='__padding') : [88:92] 〈char〉)
  nested: (data/record.c:97:17:))
data/record.c:3:5: debug3: Record: (data/record.c:97:17:) (record) data/record.c:3:5: [] public Record((data/record.c:97:17:) : <RecordKind.STRUCT: 1>
  member: Variable(Token(idx=4, range=(17, 24), value='member1') : [13:16] 〈int〉)
  member: Variable(Token(idx=10, range=(43, 50), value='member2') : [38:42] 〈char〉))
data/record.c:19:5: debug3: Checking __wti_module2_func1 (function) data/record.c:19:5: [module2] private Function(Token(idx=35, range=(167, 186), value='__wti_module2_func1') (Token(idx=36, range=(187, 193), value='S2 *s2'))) : [163:165] 〈S1〉
data/record.c:19:5: debug: Checking function [module2] __wti_module2_func1
data/record.c:19:34: [module2] '__wti_module2_func1': debug2: locals vars:
    s2: S2
data/record.c:20:13: [module2] '__wti_module2_func1': debug2: Access chain: s2->s
data/record.c:20:13: [module2] '__wti_module2_func1': debug3: Access type: S2
data/record.c:20:13: [module2] '__wti_module2_func1': error: Invalid access to private record [module1] 'S2' {access_member}
data/record.c:20:13: [module2] '__wti_module2_func1': debug3: Field access chain: s2->s
data/record.c:20:13: [module2] '__wti_module2_func1': debug3: Field access: S2->s
data/record.c:20:13: [module2] '__wti_module2_func1': error: Invalid access to private field [module1] 'S2.s' {access_member}
data/record.c:24:5: debug3: Checking func (function) data/record.c:24:5: [module1] public Function(Token(idx=45, range=(246, 250), value='func') (Token(idx=46, range=(251, 258), value='int num'))) : [242:245] 〈int〉
data/record.c:24:5: debug: Checking function [module1] func
data/record.c:24:20: [module1] 'func': debug2: locals vars:
    num: int
    s2: S2
data/record.c:39:5: [module1] 'func': error: Invalid access to private name [module2] '__wti_module2_func1'  {access_global}
data/record.c:40:5: [module1] 'func': error: Invalid access to private name [module2] '__wti_module2_func1'  {access_global}
data/record.c:41:5: [module1] 'func': error: Invalid access to private name [module2] '__wti_module2_func1'  {access_global}
data/record.c:46:10: [module1] 'func': error: Invalid access to private name [module2] '__wti_module2_func1'  {access_global}
data/record.c:27:5: [module1] 'func': debug2: Access chain: s2->s
data/record.c:27:5: [module1] 'func': debug3: Access type: S2
data/record.c:27:5: [module1] 'func': debug3: Field access chain: s2->s
data/record.c:27:5: [module1] 'func': debug3: Field access: S2->s
data/record.c:28:5: [module1] 'func': debug2: Access chain: s2->s.x
data/record.c:28:5: [module1] 'func': debug3: Access type: S2
data/record.c:28:5: [module1] 'func': debug3: Field access chain: s2->s.x
data/record.c:28:5: [module1] 'func': debug3: Field access: S2->s
data/record.c:28:5: [module1] 'func': debug3: Field access: S1->x
data/record.c:29:5: [module1] 'func': debug2: Access chain: (&s2)->s
data/record.c:29:5: [module1] 'func': debug3: Access type: S2
data/record.c:29:5: [module1] 'func': debug3: Field access chain: (&s2)->s
data/record.c:29:5: [module1] 'func': debug3: Field access: S2->s
data/record.c:30:11: [module1] 'func': debug2: Access chain: ((S2*)s2)->s
data/record.c:30:11: [module1] 'func': debug3: Access type: S2
data/record.c:30:11: [module1] 'func': debug3: Field access chain: ((S2*)s2)->s
data/record.c:30:11: [module1] 'func': debug3: Field access: S2->s
data/record.c:30:5: [module1] 'func': debug2: Access chain: ((S1*)((S2*)s2)->s)->x
data/record.c:30:5: [module1] 'func': debug3: Access type: S1
data/record.c:30:5: [module1] 'func': debug3: Field access chain: ((S1*)((S2*)s2)->s)->x
data/record.c:30:5: [module1] 'func': debug3: Field access: S1->x
data/record.c:30:11: [module1] 'func': debug2: Access chain: ((S2*)s2)->s
data/record.c:30:11: [module1] 'func': debug3: Access type: S2
data/record.c:30:11: [module1] 'func': debug3: Field access chain: ((S2*)s2)->s
data/record.c:30:11: [module1] 'func': debug3: Field access: S2->s
data/record.c:31:11: [module1] 'func': debug2: Access chain: ((S2*)s2 + 1)->s
data/record.c:31:11: [module1] 'func': debug3: Access type: S2
data/record.c:31:11: [module1] 'func': debug3: Field access chain: ((S2*)s2 + 1)->s
data/record.c:31:11: [module1] 'func': debug3: Field access: S2->s
data/record.c:31:5: [module1] 'func': debug2: Access chain: ((S1*)((S2*)s2 + 1)->s)->x
data/record.c:31:5: [module1] 'func': debug3: Access type: S1
data/record.c:31:5: [module1] 'func': debug3: Field access chain: ((S1*)((S2*)s2 + 1)->s)->x
data/record.c:31:5: [module1] 'func': debug3: Field access: S1->x
data/record.c:31:11: [module1] 'func': debug2: Access chain: ((S2*)s2 + 1)->s
data/record.c:31:11: [module1] 'func': debug3: Access type: S2
data/record.c:31:11: [module1] 'func': debug3: Field access chain: ((S2*)s2 + 1)->s
data/record.c:31:11: [module1] 'func': debug3: Field access: S2->s
data/record.c:32:11: [module1] 'func': debug2: Access chain: ((S2*)s2 + 1)->s
data/record.c:32:11: [module1] 'func': debug3: Access type: S2
data/record.c:32:11: [module1] 'func': debug3: Field access chain: ((S2*)s2 + 1)->s
data/record.c:32:11: [module1] 'func': debug3: Field access: S2->s
data/record.c:32:5: [module1] 'func': debug2: Access chain: ((S1*)((S2*)s2 + 1)->s)->x
data/record.c:32:5: [module1] 'func': debug3: Access type: S1
data/record.c:32:5: [module1] 'func': debug3: Field access chain: ((S1*)((S2*)s2 + 1)->s)->x
data/record.c:32:5: [module1] 'func': debug3: Field access: S1->x
data/record.c:32:11: [module1] 'func': debug2: Access chain: ((S2*)s2 + 1)->s
data/record.c:32:11: [module1] 'func': debug3: Access type: S2
data/record.c:32:11: [module1] 'func': debug3: Field access chain: ((S2*)s2 + 1)->s
data/record.c:32:11: [module1] 'func': debug3: Field access: S2->s
data/record.c:33:11: [module1] 'func': debug2: Access chain: ((S2*)s2[10])->s
data/record.c:33:11: [module1] 'func': debug3: Access type: S2
data/record.c:33:11: [module1] 'func': debug3: Field access chain: ((S2*)s2[10])->s
data/record.c:33:11: [module1] 'func': debug3: Field access: S2->s
data/record.c:33:5: [module1] 'func': debug2: Access chain: ((S1*)((S2*)s2[10])->s)->x
data/record.c:33:5: [module1] 'func': debug3: Access type: S1
data/record.c:33:5: [module1] 'func': debug3: Field access chain: ((S1*)((S2*)s2[10])->s)->x
data/record.c:33:5: [module1] 'func': debug3: Field access: S1->x
data/record.c:33:11: [module1] 'func': debug2: Access chain: ((S2*)s2[10])->s
data/record.c:33:11: [module1] 'func': debug3: Access type: S2
data/record.c:33:11: [module1] 'func': debug3: Field access chain: ((S2*)s2[10])->s
data/record.c:33:11: [module1] 'func': debug3: Field access: S2->s
data/record.c:34:17: [module1] 'func': debug2: Access chain: ((S2*)s2[10])->s
data/record.c:34:17: [module1] 'func': debug3: Access type: S2
data/record.c:34:17: [module1] 'func': debug3: Field access chain: ((S2*)s2[10])->s
data/record.c:34:17: [module1] 'func': debug3: Field access: S2->s
data/record.c:34:11: [module1] 'func': debug2: Access chain: ((S1*)((S2*)s2[10])->s)->x
data/record.c:34:11: [module1] 'func': debug3: Access type: S1
data/record.c:34:11: [module1] 'func': debug3: Field access chain: ((S1*)((S2*)s2[10])->s)->x
data/record.c:34:11: [module1] 'func': debug3: Field access: S1->x
data/record.c:34:17: [module1] 'func': debug2: Access chain: ((S2*)s2[10])->s
data/record.c:34:17: [module1] 'func': debug3: Access type: S2
data/record.c:34:17: [module1] 'func': debug3: Field access chain: ((S2*)s2[10])->s
data/record.c:34:17: [module1] 'func': debug3: Field access: S2->s
data/record.c:34:5: [module1] 'func': debug2: Access chain: ((S2*)((S1*)((S2*)s2[10])->s)->x)->s
data/record.c:34:5: [module1] 'func': debug3: Access type: S2
data/record.c:34:5: [module1] 'func': debug3: Field access chain: ((S2*)((S1*)((S2*)s2[10])->s)->x)->s
data/record.c:34:5: [module1] 'func': debug3: Field access: S2->s
data/record.c:34:17: [module1] 'func': debug2: Access chain: ((S2*)s2[10])->s
data/record.c:34:17: [module1] 'func': debug3: Access type: S2
data/record.c:34:17: [module1] 'func': debug3: Field access chain: ((S2*)s2[10])->s
data/record.c:34:17: [module1] 'func': debug3: Field access: S2->s
data/record.c:34:11: [module1] 'func': debug2: Access chain: ((S1*)((S2*)s2[10])->s)->x
data/record.c:34:11: [module1] 'func': debug3: Access type: S1
data/record.c:34:11: [module1] 'func': debug3: Field access chain: ((S1*)((S2*)s2[10])->s)->x
data/record.c:34:11: [module1] 'func': debug3: Field access: S1->x
data/record.c:34:17: [module1] 'func': debug2: Access chain: ((S2*)s2[10])->s
data/record.c:34:17: [module1] 'func': debug3: Access type: S2
data/record.c:34:17: [module1] 'func': debug3: Field access chain: ((S2*)s2[10])->s
data/record.c:34:17: [module1] 'func': debug3: Field access: S2->s
data/record.c:35:9: [module1] 'func': debug2: Access chain: s2->s.y
data/record.c:35:9: [module1] 'func': debug3: Access type: S2
data/record.c:35:9: [module1] 'func': debug3: Field access chain: s2->s.y
data/record.c:35:9: [module1] 'func': debug3: Field access: S2->s
data/record.c:35:9: [module1] 'func': debug3: Field access: S1->y
data/record.c:35:5: [module1] 'func': debug2: Access chain: ((&(s2->s[i].y)))->z
data/record.c:35:5: [module1] 'func': debug3: Access type: S0
data/record.c:35:5: [module1] 'func': debug3: Field access chain: ((&(s2->s[i].y)))->z
data/record.c:35:5: [module1] 'func': debug3: Field access: S0->z
data/record.c:35:9: [module1] 'func': debug2: Access chain: s2->s.y
data/record.c:35:9: [module1] 'func': debug3: Access type: S2
data/record.c:35:9: [module1] 'func': debug3: Field access chain: s2->s.y
data/record.c:35:9: [module1] 'func': debug3: Field access: S2->s
data/record.c:35:9: [module1] 'func': debug3: Field access: S1->y
data/record.c:36:5: [module1] 'func': debug2: Access chain: xxx->s2
data/record.c:36:5: [module1] 'func': warning: Can't deduce type of expression xxx->s2 {type_deduce_expr}
data/record.c:37:5: [module1] 'func': debug2: Access chain: xxx->s2
data/record.c:37:5: [module1] 'func': warning: Can't deduce type of expression xxx->s2 {type_deduce_expr}
data/record.c:38:5: [module1] 'func': debug2: Access chain: xxx->s2
data/record.c:38:5: [module1] 'func': warning: Can't deduce type of expression xxx->s2 {type_deduce_expr}
data/record.c:39:5: [module1] 'func': debug2: Access chain: __wti_module2_func1->x
data/record.c:39:5: [module1] 'func': debug3: Access type: S1
data/record.c:39:5: [module1] 'func': debug3: Field access chain: __wti_module2_func1->x
data/record.c:39:5: [module1] 'func': debug3: Field access: S1->x
data/record.c:40:5: [module1] 'func': debug2: Access chain: __wti_module2_func1->x
data/record.c:40:5: [module1] 'func': debug3: Access type: S1
data/record.c:40:5: [module1] 'func': debug3: Field access chain: __wti_module2_func1->x
data/record.c:40:5: [module1] 'func': debug3: Field access: S1->x
data/record.c:41:25: [module1] 'func': debug2: Access chain: s2->s
data/record.c:41:25: [module1] 'func': debug3: Access type: S2
data/record.c:41:25: [module1] 'func': debug3: Field access chain: s2->s
data/record.c:41:25: [module1] 'func': debug3: Field access: S2->s
data/record.c:41:5: [module1] 'func': debug2: Access chain: __wti_module2_func1->x
data/record.c:41:5: [module1] 'func': debug3: Access type: S1
data/record.c:41:5: [module1] 'func': debug3: Field access chain: __wti_module2_func1->x
data/record.c:41:5: [module1] 'func': debug3: Field access: S1->x
data/record.c:42:5: [module1] 'func': debug2: Access chain: s2->s.x
data/record.c:42:5: [module1] 'func': debug3: Access type: S2
data/record.c:42:5: [module1] 'func': debug3: Field access chain: s2->s.x
data/record.c:42:5: [module1] 'func': debug3: Field access: S2->s
data/record.c:42:5: [module1] 'func': debug3: Field access: S1->x
data/record.c:43:5: [module1] 'func': debug2: Access chain: aa->bb.cc.dd
data/record.c:43:5: [module1] 'func': warning: Can't deduce type of expression aa->bb.cc.dd {type_deduce_expr}
data/record.c:44:6: [module1] 'func': debug2: Access chain: aa->aaa
data/record.c:44:6: [module1] 'func': warning: Can't deduce type of expression aa->aaa {type_deduce_expr}
data/record.c:44:5: [module1] 'func': debug2: Access chain: (aa->aaa)->bb.cc.dd
data/record.c:44:5: [module1] 'func': warning: Can't deduce type of expression (aa->aaa)->bb.cc.dd {type_deduce_expr}
data/record.c:44:6: [module1] 'func': debug2: Access chain: aa->aaa
data/record.c:44:6: [module1] 'func': warning: Can't deduce type of expression aa->aaa {type_deduce_expr}
data/record.c:45:5: [module1] 'func': debug2: Access chain: (5 ? s2 : s3)->s.x
data/record.c:45:5: [module1] 'func': warning: Can't deduce type of expression (5 ? s2 : s3)->s.x {type_deduce_expr}
data/record.c:46:5: [module1] 'func': debug2: Access chain: (5 ? __wti_module2_func1() : s3)->x
data/record.c:46:5: [module1] 'func': debug3: Access type: S1
data/record.c:46:5: [module1] 'func': debug3: Field access chain: (5 ? __wti_module2_func1() : s3)->x
data/record.c:46:5: [module1] 'func': debug3: Field access: S1->x
data/record.c:47:5: [module1] 'func': debug2: Access chain: ((S1){.x=5})->x
data/record.c:47:5: [module1] 'func': debug3: Access type: S1
data/record.c:47:5: [module1] 'func': debug3: Field access chain: ((S1){.x=5})->x
data/record.c:47:5: [module1] 'func': debug3: Field access: S1->x
data/record.c:48:5: [module1] 'func': debug2: Access chain: ((S1*)z)->y.z
data/record.c:48:5: [module1] 'func': debug3: Access type: S1
data/record.c:48:5: [module1] 'func': debug3: Field access chain: ((S1*)z)->y.z
data/record.c:48:5: [module1] 'func': debug3: Field access: S1->y
data/record.c:48:5: [module1] 'func': debug3: Field access: S0->z
data/record.c:48:17: [module1] 'func': debug2: Access chain: s2->qwe1
data/record.c:48:17: [module1] 'func': debug3: Access type: S2
data/record.c:48:17: [module1] 'func': debug3: Field access chain: s2->qwe1
data/record.c:48:17: [module1] 'func': debug3: Field access: S2->qwe1
data/record.c:48:17: [module1] 'func': warning: Can't deduce type of member 'qwe1' in s2->qwe1 {type_deduce_member}
data/record.c:48:29: [module1] 'func': debug2: Access chain: s2->qwe2
data/record.c:48:29: [module1] 'func': debug3: Access type: S2
data/record.c:48:29: [module1] 'func': debug3: Field access chain: s2->qwe2
data/record.c:48:29: [module1] 'func': debug3: Field access: S2->qwe2
data/record.c:48:29: [module1] 'func': warning: Can't deduce type of member 'qwe2' in s2->qwe2 {type_deduce_member}
data/record.c:48:39: [module1] 'func': debug2: Access chain: s2->qwe3
data/record.c:48:39: [module1] 'func': debug3: Access type: S2
data/record.c:48:39: [module1] 'func': debug3: Field access chain: s2->qwe3
data/record.c:48:39: [module1] 'func': debug3: Field access: S2->qwe3
data/record.c:48:39: [module1] 'func': warning: Can't deduce type of member 'qwe3' in s2->qwe3 {type_deduce_member}
data/record.c:64:5: debug3: Checking __wti_module2_func3 (function) data/record.c:64:5: [module2] private Function(Token(idx=80, range=(1080, 1099), value='__wti_module2_func3') (Token(idx=81, range=(1100, 1104), value='void'))) : [1076:1079] 〈int〉
data/record.c:64:5: debug: Checking function [module2] __wti_module2_func3
data/record.c:65:12: [module2] '__wti_module2_func3': debug2: Access chain: __wti_module1_func2->x
data/record.c:65:12: [module2] '__wti_module2_func3': debug3: Access type: S2
data/record.c:65:12: [module2] '__wti_module2_func3': error: Invalid access to private record [module1] 'S2' {access_member}
data/record.c:65:12: [module2] '__wti_module2_func3': debug3: Field access chain: __wti_module1_func2->x
data/record.c:65:12: [module2] '__wti_module2_func3': debug3: Field access: S2->x
data/record.c:65:12: [module2] '__wti_module2_func3': warning: Can't deduce type of member 'x' in __wti_module1_func2->x {type_deduce_member}
data/record.c:72:5: debug3: Checking func_local_struct (function) data/record.c:72:5: [] public Function(Token(idx=99, range=(1208, 1225), value='func_local_struct') (Token(idx=100, range=(1226, 1239), value='int a, char b'))) : [1204:1207] 〈int〉
data/record.c:72:5: debug: Checking function [] func_local_struct
data/record.c:73:13: debug3: Record: (data/record.c:104:816:) (record) data/record.c:73:13: [] public Record((data/record.c:104:816:) : <RecordKind.STRUCT: 1>
  member: Variable(Token(idx=4, range=(12, 14), value='s1') : [9:11] 〈S1〉)
  member: Variable(Token(idx=10, range=(27, 29), value='s2') : [24:26] 〈S2〉)
  vardef: Variable(Token(idx=6, range=(1292, 1301), value='local_str') : [1255:1290] 〈(data/record.c:104:816:)〉))
data/record.c:72:39: 'func_local_struct': debug2: locals vars:
    a: int
    b: char
    local_str: (data/record.c:104:816:)
data/record.c:77:5: 'func_local_struct': debug2: Access chain: local_str->s1.x
data/record.c:77:5: 'func_local_struct': debug3: Access type: (data/record.c:104:816:)
data/record.c:77:5: 'func_local_struct': debug3: Field access chain: local_str->s1.x
data/record.c:77:5: 'func_local_struct': debug3: Field access: (data/record.c:104:816:)->s1
data/record.c:77:5: 'func_local_struct': debug3: Field access: S1->x
data/record.c:78:5: 'func_local_struct': debug2: Access chain: local_str->s2.s.x
data/record.c:78:5: 'func_local_struct': debug3: Access type: (data/record.c:104:816:)
data/record.c:78:5: 'func_local_struct': debug3: Field access chain: local_str->s2.s.x
data/record.c:78:5: 'func_local_struct': debug3: Field access: (data/record.c:104:816:)->s2
data/record.c:78:5: 'func_local_struct': debug3: Field access: S2->s
data/record.c:78:5: 'func_local_struct': error: Invalid access to private field [module1] 'S2.s' {access_member}
data/record.c:78:5: 'func_local_struct': debug3: Field access: S1->x
data/record.c:54:12: debug3: Checking __wti_module1_func2 (function) data/record.c:54:12: [module1] private Function(Token(idx=58, range=(907, 926), value='__wti_module1_func2') (Token(idx=59, range=(927, 931), value='void'))) : [903:905] 〈S2〉 static
data/record.c:54:12: debug: Checking function [module1] __wti_module1_func2
data/record.c:59:12: debug3: Checking __wti_module2_func2 (function) data/record.c:59:12: [module2] private Function(Token(idx=70, range=(987, 1006), value='__wti_module2_func2') (Token(idx=71, range=(1007, 1011), value='void'))) : [983:986] 〈int〉 static
data/record.c:59:12: debug: Checking function [module2] __wti_module2_func2
data/record.c:68:12: debug3: Checking __wti_module1_funcX (function) data/record.c:68:12: [module1] public Function(Token(idx=91, range=(1159, 1178), value='__wti_module1_funcX') (Token(idx=92, range=(1179, 1183), value='void'))) : [1155:1157] 〈S2〉 static
data/record.c:68:12: debug: Checking function [module1] __wti_module1_funcX
